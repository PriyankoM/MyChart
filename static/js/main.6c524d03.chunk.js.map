{"version":3,"sources":["radardashboard/maps.js","navbar/dropdown.js","navbar/navbar.js","App.js","reportWebVitals.js","index.js"],"names":["jsonobj","dataset","filter","year","sector","topic","pest","me","times","intenlist","sectorlist","datasetset","newdata","forEach","element","includes","push","sectorobj","datayear","yearlist","Data","d","Date","newd","Number","getFullYear","yearobj","element1","element2","Radarmap","params","a","fil","data","labels","datasets","backgroundColor","borderColor","Drop","DropdownButton","title","droptitle","Form","Group","controlId","Check","onChange","checked","value","type","label","Navbarc","useState","sidebar","setSidebar","showSidebar","className","to","onClick","Tabs","defaultActiveKey","id","Tab","eventKey","style","ButtonToolbar","aria-label","ButtonGroup","Button","variant","width","marginLeft","Slider","max","min","ListGroup","horizontal","Label","as","column","sm","Col","fill","name","handelstate","App","e","console","log","target","setState","handelyearstate","state","this","yearval","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c524d03.chunk.js","sourcesContent":["import React from 'react';\nimport Data from'./dataj.json';\n//import Chart from 'chart.js';\nimport { Radar } from 'react-chartjs-2';\nfunction yearobj(datayear){\n    let yearlist=[];\n    Data.forEach(element =>{\n        let d= new Date(element[\"added\"]);\n        let newd=Number(d.getFullYear());\n        if(datayear[0]<=newd && newd<=datayear[1]){\n            yearlist.push(element)\n        }\n    });\n    return yearlist\n}\nfunction sectorobj(sectorlist,datasetset){\n    let newdata=[];\n    if(sectorlist==='all'){\n        return datasetset\n    }\n    else{\n        datasetset.forEach(element=>{\n            if(sectorlist.includes(element.sector)){\n                newdata.push(element)\n            }\n        });\n        return newdata\n    }\n\n}\n\nfunction jsonobj(dataset,filter,year,sector,topic,pest){\n    let me=0;\n    let times=0;\n    let intenlist=[];\n    let sectorlist=[];\n    dataset=yearobj(year);\n    dataset=sectorobj(sector,dataset);\n    //dataset=topicobj(topic,dataset);\n\n    dataset.forEach(element => {\n        if (sectorlist.includes(element[filter])===false){\n            sectorlist.push(element[filter]);\n        }\n    });\n    sectorlist.forEach(element1=>{\n        times=0;\n        me=0;\n        dataset.forEach(element2=>{\n            if(element2[filter]===element1){\n                times=times+1;\n                me=me+Number(element2['intensity']);\n            }\n        });\n        intenlist.push(me/times);\n    });\n    // console.log(intenlist);\n    return [sectorlist,intenlist];\n}\n\nfunction Radarmap(params) {\n    let a=jsonobj(params.params,params.fil,params.year,params.sector,\"fff\",\"iio\");\n        let data= {\n            labels: a[0],\n            datasets: [{data: a[1],\n            backgroundColor:'rgba(135,206,235,0.5)',\n            borderColor:'rgba(135,206,255,1)'\n            }]\n        }\n      \n    return <Radar data={data}/>\n    \n}\nexport default Radarmap\n","import React, {useState} from 'react';\nimport {DropdownButton,Form} from 'react-bootstrap';\nfunction Drop(params) {\n  \n\n  function rohane(params) {\n    \n    \n  }\n    return<div>\n    <DropdownButton title={params.droptitle}>\n      \n        <Form.Group  controlId=\"formBasicCheckbox1\">\n    <Form.Check onChange={rohane} checked={false} title=\"ro\" value=\"rrrr\" type=\"checkbox\" label=\"Energy\" />\n    </Form.Group>\n  \n    <Form.Group controlId=\"formBasicCheckbox2\">\n    <Form.Check type=\"checkbox\" label=\"goverment\" />\n    </Form.Group>\n    <Form.Group controlId=\"formBasicCheckbox3\">\n    <Form.Check type=\"checkbox\" label=\"support\" />\n    </Form.Group>\n    </DropdownButton>\n        \n  </div>\n    \n}\nexport default Drop","import React, { useState } from 'react';\nimport './navbar.css';\nimport * as FaIcons from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport * as AiIcons from 'react-icons/ai';\nimport * as IoIcons from 'react-icons/io5';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, Col, Tab, Tabs,ListGroup,Button,ButtonToolbar,ButtonGroup } from 'react-bootstrap';\nimport {Slider} from '@material-ui/core';\nimport Dropdown from './dropdown';\nfunction Navbarc(params) {\n    const [sidebar, setSidebar] = useState(false);\n    const showSidebar = () => setSidebar(!sidebar);\n    return <>\n        <div className='nes'>\n            <Link to='#' className='manu-bars'>\n                <FaIcons.FaBars onClick={showSidebar} />\n            </Link>\n        </div>\n        <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n            <ul className='nav-menu-items' >\n                <li className='navbar-toggle'>\n                    <Link to='#' className='menu-bars'>\n                        <AiIcons.AiOutlineClose onClick={showSidebar} />\n                    </Link>\n                </li>\n                <div>\n                    <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\n                        <Tab eventKey=\"home\" title=\"Chart\" style={{backgroundColor:'#F6F6F6'}}>\n                        <ButtonToolbar className='mx-1 my-1' aria-label=\"Toolbar with button groups\">\n                            <h6 className='my-2'>Future Wave(Years)</h6>\n  <ButtonGroup className=\" mx-4\" aria-label=\"First group\">\n\n    <Button variant='secondary'>All</Button> <Button variant='light'>1</Button> <Button variant='light'>2</Button> <Button variant='light'>3</Button>\n  </ButtonGroup>\n</ButtonToolbar>\n                            <div className='rangestyle'>\n                                <h4>Year Range</h4>\n                                <div style={{width:200,marginLeft:-0}}>\n                                <Slider  max={200} min={100} />\n                                </div>\n                            </div>\n                            <ListGroup horizontal>\n                            <Form>\n                                <Form.Label as=\"legend\" column sm={2}>\n                                    FILTER\n                                </Form.Label>\n\n                                <Col style={{width:170,backgroundColor:'white'}} >\n                                    <Form.Check\n                                        type=\"radio\"\n                                        checked={params.fill==='topic'}\n                                        label=\"TOPIC\"\n                                        name=\"formHorizontalRadios\"\n                                        id=\"formHorizontalRadios1\"\n                                        value='topic'\n                                        onChange={params.handelstate}\n                                    />\n                                    <Dropdown type={'All'} />\n                                    <br/>\n                                    <Form.Check\n                                        type=\"radio\"\n                                        checked={params.fill==='sector'}\n                                        label=\"SECTOR\"\n                                        name=\"formHorizontalRadios\"\n                                        id=\"formHorizontalRadios2\"\n                                        value='sector'\n                                        onChange={params.handelstate}\n\n                                    />\n                                    <Dropdown type={'All'} />\n                                    <br/>\n                                    <Form.Check\n                                        type=\"radio\"\n                                        label=\"REGION\"\n                                        checked={params.fill==='region'}\n                                        name=\"formHorizontalRadios\"\n                                        id=\"formHorizontalRadios3\"\n                                        value='region'\n                                        onChange={params.handelstate}\n                                    />\n                                    <Dropdown type={'All'}/>\n                                    <br/>\n                                    <Form.Check\n                                        type=\"radio\"\n                                        checked={params.fill==='pestle'}\n                                        label=\"PEST\"\n                                        name=\"formHorizontalRadios\"\n                                        id=\"formHorizontalRadios4\"\n                                        value='pestle'\n                                        onChange={params.handelstate}\n                                    />\n                                    <Dropdown type={'All'}/>\n                                    <br/>\n                                    \n                                </Col>\n\n                            </Form>\n                            <Form className='mx-5'>\n    \n                                <Col  sm={10}>\n                                    <h6>MEASURE</h6>\n                                    <Dropdown type={'Intensity'}/>\n                                    <br/>\n                                    <h6>SOURCE</h6>\n                                    <Dropdown type={'All'}/>\n                                    <br/>\n                                    <h6>SWOT</h6>\n                                    <Dropdown type={'All'}/>\n                                    <br/>\n                                    <h6>CONFIDENCE</h6>\n                                    <Dropdown type={'95%'}/>\n                                    <br/>\n                                    \n                                </Col>\n                                \n\n                            </Form>\n                            \n                            </ListGroup>\n                            <ListGroup horizontal className='mx-1'>\n                            <Button style={{width:150}} variant=\"warning\">Save<FaIcons.FaSave /></Button>\n                            \n                            <Button style={{width:150}}  className='mx-4' variant=\"secondary\">Evidence <IoIcons.IoNewspaperOutline/></Button>\n                            </ListGroup>\n                        </Tab>\n                        <Tab eventKey=\"profile\" title=\"Quick Guide\">\n                            <h1>Quick Guide</h1>\n                        </Tab>\n                        <Tab eventKey=\"contact\" title=\"Feedback\">\n                            <h1>Feedback</h1>\n                        </Tab>\n                    </Tabs>\n\n                </div>\n            </ul>\n        </nav>\n    </>\n}\nexport default Navbarc","import './App.css';\nimport React from 'react';\n// import  Dash from './radardashboard/dash';\nimport Radarmap from './radardashboard/maps';\nimport Data from './dataj.json';\nimport Navbar from './navbar/navbar';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      fill:'sector',\n      year:[2016,2020],\n      sector:'all'\n    }\n  }\n\n  handelstate=(e)=>{\n    console.log(e.target.value);\n    this.setState({fill:e.target.value})\n  }\n  handelyearstate=(e)=>{\n    console.log(e.target.value)\n  }\n\nrender(){\n  return (\n    <div>\n      <Router>\n      <Navbar fill={this.state.fill} handelyearstate={this.handelyearstate} handelstate={this.handelstate} yearval={this.year}/>\n      </Router>\n    <div className=\"App\">\n      <Radarmap params={Data} fil={this.state.fill} year={this.state.year} sector={this.state.sector} />\n    </div>\n    </div>\n  )\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}